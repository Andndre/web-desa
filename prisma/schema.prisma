// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  id       Int     @id @default(autoincrement())
  email    String  @unique
  name     String?
  image    String?
  password String
}

model master_agama {
  id       Int        @id @default(autoincrement())
  nama     String     @db.VarChar(50)
  penduduk penduduk[]
}

model master_pekerjaan {
  id       Int        @id @default(autoincrement())
  nama     String     @db.VarChar(50)
  penduduk penduduk[]
}

model master_pendidikan {
  id       Int        @id @default(autoincrement())
  nama     String     @db.VarChar(50)
  penduduk penduduk[]
}

model master_golongan_darah {
  id       Int        @id @default(autoincrement())
  nama     String     @db.VarChar(5)
  penduduk penduduk[]
}

model master_penduduk_hubungan {
  id       Int        @id @default(autoincrement())
  nama     String     @db.VarChar(50)
  penduduk penduduk[]
}

model master_penduduk_status_kawin {
  id       Int        @id @default(autoincrement())
  nama     String     @db.VarChar(50)
  penduduk penduduk[]
}

model master_penduduk_status {
  id       Int        @id @default(autoincrement())
  nama     String     @db.VarChar(50)
  penduduk penduduk[]
}

model master_penduduk_status_dasar {
  id       Int        @id @default(autoincrement())
  nama     String     @db.VarChar(50)
  penduduk penduduk[]
}

model master_disabilitas {
  id       Int        @id @default(autoincrement())
  nama     String     @db.VarChar(50)
  penduduk penduduk[]
}

model master_sakit_menahun {
  id       Int        @id @default(autoincrement())
  nama     String     @db.VarChar(50)
  penduduk penduduk[]
}

model master_suku {
  id        Int        @id @default(autoincrement())
  nama      String     @db.VarChar(50)
  deskripsi String     @db.Text()
  penduduk  penduduk[]
}

enum JenisKelamin {
  Pria
  Wanita
}

model penduduk {
  nik                   String                        @id @db.VarChar(16)
  kk_id                 String                        @db.VarChar(16)
  nama                  String                        @db.VarChar(50)
  tempat_lahir          String?
  tanggal_lahir         DateTime?
  jenis_kelamin         JenisKelamin
  agama_id              Int
  alamat                String?
  nomor_akta_lahir      String?
  foto_akta_lahir       String?
  telepon               String?
  urutan                Int                           @default(0)
  created_at            DateTime                      @default(now())
  updated_at            DateTime?
  agama                 master_agama                  @relation(fields: [agama_id], references: [id])
  pekerjaan             master_pekerjaan?             @relation(fields: [pekerjaan_id], references: [id])
  pendidikan            master_pendidikan?            @relation(fields: [pendidikan_id], references: [id])
  golongan_darah        master_golongan_darah?        @relation(fields: [golongan_darah_id], references: [id])
  status_kawin          master_penduduk_status_kawin? @relation(fields: [status_kawin_id], references: [id])
  hubungan              master_penduduk_hubungan?     @relation(fields: [hubungan_id], references: [id])
  status                master_penduduk_status?       @relation(fields: [status_id], references: [id])
  status_dasar          master_penduduk_status_dasar? @relation(fields: [status_dasar_id], references: [id])
  cacat                 master_disabilitas?           @relation(fields: [cacat_id], references: [id])
  sakit_menahun         master_sakit_menahun?         @relation(fields: [sakit_menahun_id], references: [id])
  suku                  master_suku?                  @relation(fields: [suku_id], references: [id])
  kartu_keluarga        penduduk_kartu_keluarga       @relation(fields: [kk_id], references: [nomor_kk])
  kartu_keluarga_kepala penduduk_kartu_keluarga?      @relation(name: "penduduk_kepala_keluarga")

  pekerjaan_id      Int?
  pendidikan_id     Int?
  golongan_darah_id Int?
  cacat_id          Int?
  status_kawin_id   Int?
  hubungan_id       Int?
  status_id         Int?
  status_dasar_id   Int?
  sakit_menahun_id  Int?
  suku_id           Int?
}

model penduduk_kartu_keluarga {
  nomor_kk            String  @id @db.VarChar(16)
  nik_kepala_keluarga String? @unique @db.VarChar(16)

  kepala_keluarga penduduk?  @relation(fields: [nik_kepala_keluarga], references: [nik], onDelete: Cascade, name: "penduduk_kepala_keluarga")
  penduduk        penduduk[]
}
